# Task: Generate multiple files

apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: generate-multiple-files
spec:
  workspaces:
  - name: output
    description: "Workspace to write output files."
  params:
  - name: fileCount
    type: string
    default: "3"
    description: "Number of files to generate."
  results:
  - name: dirName
    description: "Name of the directory created"
  steps:
  - name: write-files
    image: alpine:3.19
    script: |
      #!/bin/sh
      set -e

      DIR_NAME="files-$(date +%Y%m%d-%H%M%S)"
      OUTPUT_PATH="$(workspaces.output.path)/$DIR_NAME"
      mkdir -p "$OUTPUT_PATH"
      echo "Creating directory: $DIR_NAME"
      echo "Generating $(params.fileCount) files in $OUTPUT_PATH"

      for i in $(seq 1 $(params.fileCount)); do
        FILE_PATH="$OUTPUT_PATH/file_$i.txt"
        echo "This is file $i generated by Tekton at $(date)" > "$FILE_PATH"
        echo "Content for file $i - Pipeline run demo" >> "$FILE_PATH"
        echo "Directory: $DIR_NAME" >> "$FILE_PATH"
        echo "Generated: $FILE_PATH"
      done

      # Set Task Result for downstream tasks (trim any newlines)
      echo -n "$DIR_NAME" > "$(results.dirName.path)"

      ls -la "$OUTPUT_PATH"

---
# Pipeline: Generate & upload

apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: upload-directory-to-oci-pipeline
spec:
  description: |
    Pipeline to generate multiple files in a timestamped directory and upload them to OCI Object Storage.
  workspaces:
  - name: shared-data
    description: "Shared workspace between tasks."
  - name: credentials
    description: "Workspace containing OCI credentials secret."
  params:
  - name: bucketName
    type: string
  - name: objectPrefix
    type: string
    default: ""
  - name: dryRun
    type: string
    default: "false"
  - name: verbose
    type: string
    default: "true"

  tasks:
  - name: generate-files
    taskRef:
      name: generate-multiple-files
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: fileCount
      value: "1"

  - name: upload-directory
    runAfter: ["generate-files"]
    taskRef:
      name: oracle-cloud-storage-upload
    workspaces:
    - name: source
      workspace: shared-data
    - name: credentials
      workspace: credentials
    params:
    - name: path
      value: "$(tasks.generate-files.results.dirName)"
    - name: bucketName
      value: "$(params.bucketName)"
    - name: objectPrefix
      value: "$(params.objectPrefix)/$(tasks.generate-files.results.dirName)/"
    - name: recursive
      value: "true"
    - name: extraArgs
      value:
        - "--parallel-upload-count"
        - "3"
        - "--metadata"
        - '{"pipeline":"directory-upload","environment":"test"}'
---
# PipelineRun Example
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: upload-directory-to-oci-pipeline-run
spec:
  pipelineRef:
    name: upload-directory-to-oci-pipeline
  params:
  - name: bucketName
    value: "my-bucket"
  - name: objectPrefix
    value: "tekton-demo"
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      metadata:
        name: shared-data-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  - name: credentials
    secret:
      secretName: oci-credentials